#include <bits/stdc++.h>
#define ll long long int
#define db double

const int N=1e6+10;
using namespace std;

vector<bool>v(N,0);

int bina(vector<int>&a, vector<int>&b , int k, int mini){


    ll l=*max_element(a.begin(), a.end());



    ll r=INT_MAX;

    int result=0;

    while(l<=r){

        ll mid=(l+r)/2;

        if(mini+mid <=k){

                cout<<mini<<" "<<mid<<endl;
            result=mid;
            l=mid+1;
        }else

            r=mid-1;


    }

    return result;

}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    //memset(dp,-1, sizeof(dp));


    int t=1;
    cin >> t;



    while (t--)
    {
       int n,m;
       cin>>n>>m;

       vector<int>a(n), b(n);

        int cnt=0, cnt0=0;


        for(int i=0; i<n; i++){
            cin>>a[i];
            if(a[i]==0)
                cnt++;
        }

        for(int i=0; i<n; i++)
            cin>>b[i];


        vector<int>temp;

        for(int i=0; i<n; i++)
        {
            if(b[i]!=-1)
                temp.push_back(a[i]+b[i]);
        }

        sort(temp.begin(), temp.end());

        int mini=*min_element(a.begin(), a.end());
        int maxi=*max_element(a.begin(), a.end());

        int x=unique(temp.begin(), temp.end())- temp.begin();



        if(x>1  )
            cout<<0<<endl;
        else
        {
            if(temp.empty()){


                cout<<(m+mini)-maxi +1<<endl;
            } else if( (temp[0]-mini>m) or temp[0]<maxi)
                cout<<0<<endl;

               else

                cout<<1<<endl;
        }


    }

    return 0;

    }
